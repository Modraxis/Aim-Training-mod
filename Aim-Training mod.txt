var alien_types = [
    {code:10,level:0,points:1,crystal_drop:0},
    {code:13,level:0,points:1,crystal_drop:0},
    {code:16,level:0,points:1,crystal_drop:0},
    {code:17,level:0,points:1,crystal_drop:0},
  ];
game.modding.commands.timeout = function(req){
  let args = req.replace(/^\s+/, "").replace(/\s+/, " ").split(" "), id = Number(args[1] || "NaN");  
  game.ships[id].custom.a = !game.ships[id].custom.a;
  game.ships[id].set({x:980,y:-980,type:192,vx:0,vy:0,crystals:0,shield:100,collider:true});
  for (let i=0; i<ids.length; i++) ship.setUIComponent({id:ids[i],visible:false});    
  game.ships[id].setUIComponent({
    id: "a",
    position: [25, 85, 50, 25],
    visible: !game.ships[id].custom.a,
    components: [{
        type: "Welcome",
        position: [0, 0, 100, 20],
        value: "You are in timeout!",
        color: "#ffbbbb",
      },
    ],
  });
};

//loli (id)
game.modding.commands.weebify = function(req){
  let args = req.replace(/^\s+/, "").replace(/\s+/, " ").split(" "), id = Number(args[1] || "NaN");  
  game.ships[id].custom.a = !game.ships[id].custom.a;
  game.ships[id].set({x:-900,y:-900,vx:0,vy:0,type:1912,crystals:0,shield:100,collider:true,idle:true});
  for (let i=0; i<ids.length; i++) ship.setUIComponent({id:ids[i],visible:false});            
  game.ships[id].setUIComponent({
    id: "a",
    position: [25, 85, 50, 25],
    visible: !game.ships[id].custom.a,
    components: [{
        type: "text",
        position: [0, 0, 100, 20],
        value: "Weebifying in process....!",
        color: "#ffbbbb",
      },
    ]
  });
};
var Rond = {
  id: "Rond",
  obj: "https://starblast.data.neuronality.com/mods/objects/plane.obj",
  emissive:"https://raw.githubusercontent.com/STARBLASTA/background/main/Creadit%20by%20basit.png",
};
game.setObject({
  id: "Rond",
  type: Rond,
  position:{x:2,y:0,z:-6.5},
  scale:{x:80,y:80,z:0},
  rotation:{x:-160.1,y:0,z:0}
});
playerList = function(){
  echo("\nList of players and their IDs:");
  for (let i=0; i<game.ships.length; i++){ 
    echo(i+": "+game.ships[i].name);  
  } 
  echo("\n");
};

findPlayerByName = function(name){
	for (let i=0; i<game.ships.length; i++){
		if (game.ships[i].name == name){
		  return game.ships[i];
		}
	}
	return null;
};
var vocabulary = [
  { text: "You", icon: "\u004e", key: "O" },
  { text: "Me", icon: "\u004f", key: "E" },
  { text: "Yes", icon: "✅", key: "Y" },
  { text: "No", icon: "❌", key: "N" },
  { text: "Hmm?", icon: "💢", key: "Q" },
  { text: "Sorry", icon: "🙁", key: "S" },
  { text: "Thanks", icon: "😀", key: "X" },
  { text: "Wait", icon: "🤚", key: "T" },
  { text: "Follow", icon: "\u0050", key: "F" },
  { text: "Attack", icon: "\u00b4", key: "A" },
  { text: "GG", icon: "\u00a3", key: "G" },
  { text: "Lag", icon: "\u00be", key: "V" },
  { text: "Discord", icon: "\u007b", key: "D" },
  { text: "No Problem", icon: "✌", key:"P" }, 
];

var A_Speedster_605 = '{"name":"A-Speedster","level":6,"model":5,"size":1.5,"specs":{"shield":{"capacity":[1e+308,1e+308],"reload":[1e+308,1e+308]},"generator":{"capacity":[80,140],"reload":[30,45]},"ship":{"mass":175,"speed":[90,115],"rotation":[60,80],"acceleration":[90,140]}},"bodies":{"main":{"section_segments":8,"offset":{"x":0,"y":0,"z":0},"position":{"x":[0,0,0,0,0,0],"y":[-100,-95,0,0,70,65],"z":[0,0,0,0,0,0]},"width":[0,10,40,20,20,0],"height":[0,5,30,30,15,0],"texture":[6,11,5,63,12],"propeller":true,"laser":{"damage":[38,84],"rate":1,"type":2,"speed":[175,230],"recoil":50,"number":1,"error":0}},"cockpit":{"section_segments":8,"offset":{"x":0,"y":-60,"z":15},"position":{"x":[0,0,0,0,0,0,0],"y":[-20,0,20,40,50],"z":[-7,-5,0,0,0]},"width":[0,10,10,10,0],"height":[0,10,15,12,0],"texture":[9]},"side_propulsors":{"section_segments":10,"offset":{"x":50,"y":25,"z":0},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-20,-15,0,10,20,25,30,40,80,70],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,15,20,20,20,15,15,20,10,0],"height":[0,15,20,20,20,15,15,20,10,0],"propeller":true,"texture":[4,4,2,2,5,63,5,4,12]},"cannons":{"section_segments":12,"offset":{"x":30,"y":40,"z":45},"position":{"x":[0,0,0,0,0,0,0],"y":[-50,-45,-20,0,20,30,40],"z":[0,0,0,0,0,0,0]},"width":[0,5,7,10,3,5,0],"height":[0,5,7,8,3,5,0],"angle":-10,"laser":{"damage":[8,12],"rate":2,"type":1,"speed":[100,130],"number":1,"angle":-10,"error":0},"propeller":false,"texture":[6,4,10,4,63,4]}},"wings":{"join":{"offset":{"x":0,"y":0,"z":10},"length":[40,0],"width":[10,20],"angle":[-1],"position":[0,30],"texture":[63],"bump":{"position":0,"size":25}},"winglets":{"offset":{"x":0,"y":-40,"z":10},"doubleside":true,"length":[45,10],"width":[5,20,30],"angle":[50,-10],"position":[90,80,50],"texture":[4],"bump":{"position":10,"size":30}}},"typespec":{"name":"A-Speedster","level":6,"model":5,"code":605,"specs":{"shield":{"capacity":[1e+308,1e+308],"reload":[1e+308,1e+308]},"generator":{"capacity":[80,140],"reload":[30,45]},"ship":{"mass":175,"speed":[90,115],"rotation":[60,80],"acceleration":[90,140]}},"shape":[3,2.914,2.408,1.952,1.675,1.49,1.349,1.263,1.198,1.163,1.146,1.254,1.286,1.689,2.06,2.227,2.362,2.472,2.832,3.082,3.436,3.621,3.481,2.48,2.138,2.104,2.138,2.48,3.481,3.621,3.436,3.082,2.832,2.472,2.362,2.227,2.06,1.689,1.286,1.254,1.146,1.163,1.198,1.263,1.349,1.49,1.675,1.952,2.408,2.914],"lasers":[{"x":0,"y":-3,"z":0,"angle":0,"damage":[38,84],"rate":1,"type":2,"speed":[175,230],"number":1,"spread":0,"error":0,"recoil":50},{"x":1.16,"y":-0.277,"z":1.35,"angle":-10,"damage":[8,12],"rate":2,"type":1,"speed":[100,130],"number":1,"spread":-10,"error":0,"recoil":0},{"x":-1.16,"y":-0.277,"z":1.35,"angle":10,"damage":[8,12],"rate":2,"type":1,"speed":[100,130],"number":1,"spread":-10,"error":0,"recoil":0}],"radius":3.621}}';

var ships = [];
ships.push(A_Speedster_605);
var ship_list = [
  [
    605,
  ],
];
var map =
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    \n"+
"                    ";

this.options = {
  ships:                             ships,
  vocabulary:                      vocabulary,
  custom_map:                         map,
  max_players:                         12,	
  lives :                               0,
  starting_ship:                       801,
  map_size:                            20,
  survival_level:                       8,
  starting_ship_maxed:                true, 
  asteroids_strength:                 999999,
  crystal_value:                      1.5,
  crystal_drop:                        10,
  map_name:                    "Aim Training mod",
  friendly_colors:                      10,
  weapons_store:                      false,
  max_level:                            8,
  soundtrack:                     "argon.mp3",
};

var speedster_ships = [605];

this.tick = function(game) {
  if (game.step % 15 === 0)
  {
    var aliens = Math.max(20,Math.min(0.5,game.ships.length*2.7));
    if (game.aliens.length<aliens)
    {
      var minute = game.step/1 ;
      var range = Math.min(alien_types.length,minute/1);
      var index = Math.floor(Math.random()*range);
      var angle = Math.random()*Math.PI*2;
      var alien = alien_types[index] ;
      alien.x = Math.cos(angle)*100 ;
      alien.y = Math.sin(angle)*100 ;
      game.addAlien(alien) ;
    }
  }
} ;

game.modding.tick = function (t) {
  this.game.tick(t);
  if (this.context.tick !== null) {
    this.context.tick(this.game);
  }
};

this.event = function (event, game) {
  var ship = event.ship,
  ship_level = Math.trunc(ship.type / 100),
  max_crystals = 10000000,
  new_type,
  tree = ship.custom.tree,
  index = -1,
  ids = [],
  shc = [];
  switch (event.name){
    case "ui_component_clicked":
      var component = event.id;
      var line = 0, row = 0;
      if (component == "Options"){
        if (ship.custom.option_screen === true){
          if (ship.custom.a){
            for (let i=0; i<ids.length; i++){
              line++;
              if (line < 6){
                if (i<6){
                  ship.setUIComponent({
                    id: ids[i],
                    position: [7+line*12,41+row*10,12,10],
                    clickable: true,
                    visible: true,
                    shortcut: shc[i],
                    components: [
                      {type:"box",position:[0,0,100,100],fill:"rgba(68, 85, 102, 0)",stroke:"#0077FF",width:14},
                      {type:"text",position:[5,25,90,40],value:`${ids[i]}[${i+1}]`,color: "#FF0004"},
                    ],
                  });
                } else {
                  ship.setUIComponent({
                    id: ids[i],
                    position: [7+line*36,41+row*10,12,10],
                    clickable: true,
                    visible: true,
                    components: [
                      {type:"box",position:[0,0,100,100],fill:"rgba(68, 85, 102, 0)",stroke:"#0077FF",width:14},
                      {type:"text",position:[5,25,90,40],value:`${ids[i]}`,color: "#FF0004"},
                    ],
                  });                  
                }
              } else {
                line = 0; 
                row++;
              }
            }
            ship.custom.option_screen = false;
          }
        } else if (ship.custom.option_screen === false){
          for (let i=0; i<ids.length; i++) ship.setUIComponent({id:ids[i],visible:false}); 
          ship.custom.option_screen = true;
        }

      }  if (component == "A-Speedster"){
        ship.set({type:speedster_ships[speedster_ships.indexOf(ship.type)+1]||speedster_ships[0],crystals:720,shield:500,generator:0,collider:true,stats:88888888});
      } else if (component == "missiles"){
        game.addCollectible({code:11,x:ship.x,y:ship.y});
      } else if (component == "heavy mines"){
        game.addCollectible({code:21,x:ship.x,y:ship.y});
      } else if (component == "defend pod"){
        game.addCollectible({code:42,x:ship.x,y:ship.y});
      } else if (component == "rockets"){
        game.addCollectible({code:10,x:ship.x,y:ship.y});
      } else if (component == "empty"){
        ship.emptyWeapons();
      } else if (component == "torpedo"){  
        game.addCollectible({code:12,x:ship.x,y:ship.y});
      } else if (component == "battery"){
        game.addCollectible({code:91,x:ship.x,y:ship.y});
      } else if (component == "small mine"){
        game.addCollectible({code:20,x:ship.x,y:ship.y});
      }
      
    case "ship_spawned":
      ship.set({x:0, y:0,invulnerable:300,type:605,shield:999,crystals:720,collider:true,stats:66666666});//((ship_level||0)**2)*20})
    break;
  }
};
